function predictions = svm(TRAIN_TRUTH_PATH, TRAIN_FEATURES_PATH, TEST_TRUTH_PATH, TEST_FEATURES_PATH)
    %% Perform SVM
    X = importdata(TRAIN_FEATURES_PATH);
    Y = importdata(TRAIN_TRUTH_PATH);
    
%     Mdl = fitcecoc(X, Y, 'Learners', 'svm', 'OptimizeHyperparameters',{'BoxConstraint'}, ...
%         'HyperparameterOptimizationOptions', struct('Optimizer','bayesopt','Kfold', 10,...
%                     'ShowPlots', 0, 'Verbose', 1));

    Mdl = fitcecoc(X, Y, 'Learners', templateSVM('KernelFunction', 'gaussian', ...
    'BoxConstraint', 195));
    
    %% Predict
    Xnew = importdata(TEST_FEATURES_PATH);
    [predictions, probabilities, ~] = Mdl.predict(Xnew);

    %% Calculate performance
    Ynew = importdata(TEST_TRUTH_PATH);
    
    addpath('..\..\shared\helper_scripts');
    displayPerformance(Ynew, Mdl.ClassNames', probabilities);
end